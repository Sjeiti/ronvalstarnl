{
  "id": 907,
  "date": "2012-04-25T20:59:00",
  "date_gmt": "2012-04-25T20:59:00",
  "guid": {
    "rendered": "http://ronvalstar.nl/?p=907"
  },
  "modified": "2014-08-15T19:20:24",
  "modified_gmt": "2014-08-15T19:20:24",
  "slug": "javascript-performance-testing",
  "status": "publish",
  "type": "post",
  "link": "https://ronvalstar.nl/javascript-performance-testing",
  "title": {
    "rendered": "Javascript performance testing"
  },
  "content": {
    "rendered": "<p>&#8216;All roads lead to Rome&#8217; is a saying in Dutch that means there are multiple ways to accomplish the same thing. Very true in real life but maybe even more so in programming. You&#8217;d think the fastest code is the best, but a lot of times readability is chosen over speed (or, as in most cases, speed isn&#8217;t just that important).</p>\n<p><!--more--><br />\nA Javascript speed test will normally look something like this:<br />\n<em>calculate elapsed time while doing the same calculation a fixed number of times</em><br />\nOr like this:<br />\n<em>count how many times we can do the same calculation in a fixed amount of time</em></p>\n<p>Simple enough. But for a solid test result you have to test in multiple browsers, operating systems and machines. Luckily for us, in this day and age of cloud computing, there is something out there that does just that. But more importantly, whatever you were planning to test, chances are that somebody else already beat you to it.<br />\nEnter <a href=\"http://jsperf.com\">jsperf</a>, a great online benchmarking application build with <a href=\"http://benchmarkjs.com/\">benchmarkjs</a>. You can create your own tests, or run existing ones. You can even revise existing tests.</p>\n<p>For instance: I know a lot of developers who don&#8217;t like switches because it makes their code unreadable <!--(Crockford, Clean code)-->. Some don&#8217;t even us ternary statements. Tests like these should make them reconcider:<br />\n<a href=\"http://jsperf.com/ifswitch/4\">if vs switch</a><br />\n<a href=\"http://jsperf.com/if-else-vs-arrays-vs-switch-vs-ternary/6\">if switch indexed ternary</a></p>\n<p>Here is a list of Javascript tests that you might find useful or surprising.</p>\n<ul>\n<li><a href=\"http://jsperf.com/fastest-array-loops-in-javascript/4\">looping</a></li>\n<li><a href=\"http://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/3\">chars in long strings</a></li>\n<li><a href=\"http://jsperf.com/math-floor-vs-math-round-vs-parseint/9\">floor vs bitwise not</a></li>\n<li><a href=\"http://jsperf.com/join-versus-string-concatination/10\">string concatenation</a></li>\n<li><a href=\"http://jsperf.com/one-time-iife-or-everytime-boolean-conversion\">if else vs notnot</a></li>\n<li><a href=\"http://jsperf.com/for-while-test/3\">for while</a></li>\n<li><a href=\"http://jsperf.com/localstorage-vs-objects\">localstorage vs object lookup</a></li>\n<li><a href=\"http://jsperf.com/isarray-shim/2\">isArray</a></li>\n<li><a href=\"http://jsperf.com/math-pow-vs-bitwise/2\">pow vs bitwise</a></li>\n<li><a href=\"http://jsperf.com/math-pow-vs-multiplication\">pow vs multiplication</a></li>\n<li><a href=\"http://jsperf.com/prefix-or-postfix-increment/3\">icrement prefix postfix or add/store</a></li>\n<li><a href=\"http://jsperf.com/array-splice-vs-array-length-0/2\">empty an array</a></li>\n<li><a href=\"http://jsperf.com/min-max-compare\">min max</a></li>\n</ul>\n<p>&#8230;now get back to work!</p>\n",
    "protected": false
  },
  "excerpt": {
    "rendered": "<p>&#8216;All roads lead to Rome&#8217; is a saying in Dutch that means there are multiple ways to accomplish the same thing. Very true in real life but maybe even more so in programming. You&#8217;d think the fastest code is the best, but a lot of times readability is chosen over speed (or, as in most [&hellip;]</p>\n",
    "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
    5,
    13,
    15
  ],
  "tags": [
    45,
    86,
    111
  ],
  "terms": {
    "post_tag": [
      {
        "term_id": 45,
        "name": "crossbrowser",
        "slug": "crossbrowser",
        "term_group": 0,
        "term_taxonomy_id": 45,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 1,
        "filter": "raw",
        "term_order": "0",
        "ID": 45
      },
      {
        "term_id": 86,
        "name": "performance",
        "slug": "performance",
        "term_group": 0,
        "term_taxonomy_id": 88,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 3,
        "filter": "raw",
        "term_order": "0",
        "ID": 86
      },
      {
        "term_id": 111,
        "name": "test",
        "slug": "test",
        "term_group": 0,
        "term_taxonomy_id": 113,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 12,
        "filter": "raw",
        "term_order": "0",
        "ID": 111
      }
    ],
    "category": [
      {
        "term_id": 5,
        "name": "code",
        "slug": "code",
        "term_group": 0,
        "term_taxonomy_id": 5,
        "taxonomy": "category",
        "description": "",
        "parent": 170,
        "count": 71,
        "filter": "raw",
        "term_order": "0",
        "ID": 5
      },
      {
        "term_id": 13,
        "name": "Javascript",
        "slug": "javascript",
        "term_group": 0,
        "term_taxonomy_id": 13,
        "taxonomy": "category",
        "description": "",
        "parent": 5,
        "count": 52,
        "filter": "raw",
        "term_order": "0",
        "ID": 13
      },
      {
        "term_id": 15,
        "name": "link",
        "slug": "link",
        "term_group": 0,
        "term_taxonomy_id": 15,
        "taxonomy": "category",
        "description": "",
        "parent": 0,
        "count": 10,
        "filter": "raw",
        "term_order": "0",
        "ID": 15
      }
    ]
  },
  "_links": {
    "self": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/posts/907"
      }
    ],
    "collection": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/posts"
      }
    ],
    "about": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/types/post"
      }
    ],
    "author": [
      {
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/users/2"
      }
    ],
    "replies": [
      {
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/comments?post=907"
      }
    ],
    "version-history": [
      {
        "count": 0,
        "href": "https://ronvalstar.nl/api/wp/v2/posts/907/revisions"
      }
    ],
    "wp:attachment": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/media?parent=907"
      }
    ],
    "wp:term": [
      {
        "taxonomy": "category",
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/categories?post=907"
      },
      {
        "taxonomy": "post_tag",
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/tags?post=907"
      }
    ],
    "curies": [
      {
        "name": "wp",
        "href": "https://api.w.org/{rel}",
        "templated": true
      }
    ]
  }
}