{
  "id": 2578,
  "date": "2014-04-26T19:37:36",
  "date_gmt": "2014-04-26T19:37:36",
  "guid": {
    "rendered": "http://ronvalstar.nl/?p=2578"
  },
  "modified": "2017-01-17T12:10:05",
  "modified_gmt": "2017-01-17T12:10:05",
  "slug": "experiment-snow",
  "status": "publish",
  "type": "post",
  "link": "https://ronvalstar.nl/experiment-snow",
  "title": {
    "rendered": "Experiment: snow"
  },
  "content": {
    "rendered": "<p>This might look simple but it is actually a simple implementation of a more complex solution. Normally particles are deterministic. This means a position of a single particle in time can only be determined by extrapolating from it&#8217;s previous position.<br />\nThe particles you see here are procedural: their position in time is predetermined plus their number is infinite.<br />\nYou can check this by dragging left or right which also reverses time. The particles will go in exact reverse, even the ones that were already off-screen.<br />\n<!--more--><br />\nThe technique used for particle scattering is relatively simple. The starting point is a grid. If we take a grid size of ten pixels in a hundred pixel field the number of particles will be around 10&#215;10=100 (or possibly 11&#215;11=121 if you round the edges correctly). The x/y position of each gridpoint will act as seed for a psuedo random number generator. The result is used for offsetting the original point.</p>\n<p><img src=\"http://ronvalstar.nl/wordpress/wp-content/uploads/Artboard-1.png\" alt=\"\" width=\"760\" height=\"400\" class=\"alignnone size-full wp-image-3288\" srcset=\"https://ronvalstar.nl/wordpress/wp-content/uploads/Artboard-1.png 760w, https://ronvalstar.nl/wordpress/wp-content/uploads/Artboard-1-300x158.png 300w\" sizes=\"(max-width: 760px) 100vw, 760px\" /></p>\n<p>In the example I used the prng result as a directional offset: random radians with a fixed radius. You could use the same prng result for a random radius.</p>\n<p>For speed optimisation you can make a lookup table for the sine and cosine calculations. The optimal size of the table is 2*Pi*r.</p>\n<p>Instead of an actual prng I used Perlin noise, which makes the movement possible (and takes multiple arguments). If you need static particle scattering it will be faster to use a regular prng. But you&#8217;ll have to turn the x and y values into a single seed without mirroring the field diagonally (for instance: x+1E6*y).</p>\n<p>Lastly we have to enlarge the gridfield a bit to accommodate for the offset radius. Normally a 100&#215;100 field with a gridsize of 10 wil hold a maximum of 121 points. But with an offset radius points that are normally outside the viewport could suddenly appear inside. So we also enlarge the grid with the offset radius.</p>\n<pre><code data-language=\"javascript\" data-src=\"/wordpress/wp-content/themes/sjeiti/static/experiment/snow.js\"></code></pre>\n",
    "protected": false
  },
  "excerpt": {
    "rendered": "<p>A simple implementation of procedural particle scattering: an infinite field of snow falling upward.</p>\n",
    "protected": false
  },
  "author": 2,
  "featured_media": 0,
  "comment_status": "open",
  "ping_status": "open",
  "sticky": false,
  "template": "",
  "format": "standard",
  "meta": [],
  "categories": [
    1
  ],
  "tags": [
    88,
    235,
    249,
    250
  ],
  "terms": {
    "post_tag": [
      {
        "term_id": 88,
        "name": "Perlin Noise",
        "slug": "perlin-noise",
        "term_group": 0,
        "term_taxonomy_id": 90,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 8,
        "filter": "raw",
        "term_order": "0",
        "ID": 88
      },
      {
        "term_id": 235,
        "name": "cool shit",
        "slug": "cool-shit",
        "term_group": 0,
        "term_taxonomy_id": 254,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 24,
        "filter": "raw",
        "term_order": "0",
        "ID": 235
      },
      {
        "term_id": 249,
        "name": "experiment",
        "slug": "experiment",
        "term_group": 0,
        "term_taxonomy_id": 280,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 13,
        "filter": "raw",
        "term_order": "0",
        "ID": 249
      },
      {
        "term_id": 250,
        "name": "particles",
        "slug": "particles",
        "term_group": 0,
        "term_taxonomy_id": 281,
        "taxonomy": "post_tag",
        "description": "",
        "parent": 0,
        "count": 8,
        "filter": "raw",
        "term_order": "0",
        "ID": 250
      }
    ],
    "category": [
      {
        "term_id": 1,
        "name": "uncategorized",
        "slug": "uncategorized",
        "term_group": 0,
        "term_taxonomy_id": 1,
        "taxonomy": "category",
        "description": "",
        "parent": 0,
        "count": 36,
        "filter": "raw",
        "term_order": "0",
        "ID": 1
      }
    ]
  },
  "_links": {
    "self": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/posts/2578"
      }
    ],
    "collection": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/posts"
      }
    ],
    "about": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/types/post"
      }
    ],
    "author": [
      {
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/users/2"
      }
    ],
    "replies": [
      {
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/comments?post=2578"
      }
    ],
    "version-history": [
      {
        "count": 3,
        "href": "https://ronvalstar.nl/api/wp/v2/posts/2578/revisions"
      }
    ],
    "predecessor-version": [
      {
        "id": 3289,
        "href": "https://ronvalstar.nl/api/wp/v2/posts/2578/revisions/3289"
      }
    ],
    "wp:attachment": [
      {
        "href": "https://ronvalstar.nl/api/wp/v2/media?parent=2578"
      }
    ],
    "wp:term": [
      {
        "taxonomy": "category",
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/categories?post=2578"
      },
      {
        "taxonomy": "post_tag",
        "embeddable": true,
        "href": "https://ronvalstar.nl/api/wp/v2/tags?post=2578"
      }
    ],
    "curies": [
      {
        "name": "wp",
        "href": "https://api.w.org/{rel}",
        "templated": true
      }
    ]
  }
}